`timescale 1s/0.1s
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2019/12/06 17:10:15
// Design Name: 
// Module Name: music
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module music(audio,button,music_clk);
input  button,music_clk;
output audio;        //输出蜂鸣器开关

reg [23:0] counter8Hz;   //计算是否到8HZ
reg [16:0] count ;   //用于控制蜂鸣器
reg clk_8Hz;      //手动分频后4Hz的clk
wire clk_12MHz;    //用IP核分频的12MHz 的clk
reg audiof;        //控制audio开关
reg [4:0]j;        //低，中，高的1 2 3 4 5 6 7
reg [16:0]quti;     //每个音所对应的频率
reg [9:0] len;    //乐谱长度  
 
clk_wiz_0 clk12MHz(.clk_in1(music_clk),.clk_out1(clk_12MHz));    //获得12MHz的clk
initial 
begin
    counter8Hz=0;
    clk_8Hz=0;
    audiof=0;
    j=0;quti=0;len=0;
end

assign audio= button? audiof : 1'b1 ;    //控制开关

  always @(posedge music_clk)                 //8Hz分频  
  begin
    //  if(counter4Hz==2500000)     
   if(counter8Hz==6250000)       
      begin
          counter8Hz<=0;
          clk_8Hz=~clk_8Hz;
      end
      else
      begin
          counter8Hz<=counter8Hz+1;
      end
  end
  
         
always @(posedge clk_8Hz)       //将1-7转换为频率
	begin 
        case(j)
            'd0:quti<='d0;
            'd1:quti<='d22932;//低音
            'd2:quti<='d20436;
            'd3:quti<='d18024;
            'd4:quti<='d17184;
            'd5:quti<='d15312;
            'd6:quti<='d13632;
            'd7:quti<='d12144;
            'd8:quti<='d11424;//中音
            'd9:quti<='d10212;
            'd10:quti<='d9096;
            'd11:quti<='d8592;
            'd12:quti<='d7656;
            'd13:quti<='d6818;
            'd14:quti<='d6072;
            'd15:quti<='d5736;//高音
            'd16:quti<='d5112;
            'd17:quti<='d4548;
            'd18:quti<='d4296;
            'd19:quti<='d3828;
            'd20:quti<='d3408;
            'd21:quti<='d3036;
            default:quti<='d0;
        endcase
	end

always @(posedge clk_12MHz)             //audio模块，输出一定频率(quti)的声音
	begin 
	if(count==quti)        //quti为每一个音符频率
		begin
		  count<=0;
		  audiof<=~audiof;
		end
	else
		begin
		  count<=count+1;
		end
	end

always @(posedge clk_8Hz)   //播放音乐
//if(clk_4Hz==1)
    begin
        if(button==0)    //每次重新播放
            len<=0;
    else
        begin
             if(len==340)     //整首歌曲长度
                 len<=0;       //循环播放
             else
                 len=len+1;
             case(len)        //以四分音符为一拍，每小节四拍
             0:j=0;1:j=0;2:j=0;3:j=0;
             
             4:j=15;5:j=15;6:j=15;7:j=15;
             8:j=13;9:j=13;10:j=13;11:j=15;
             12:j=12;13:j=12;14:j=13;15:j=13;
             16:j=0;17:j=0;18:j=0;19:j=0;
             
             20:j=15;21:j=15;22:j=13;23:j=13;
             24:j=12;25:j=12;26:j=15;27:j=15;
             28:j=13;29:j=13;30:j=13;31:j=13;
             32:j=0;33:j=0;34:j=0;35:j=0;
             
             36:j=8;37:j=8;38:j=8;39:j=0;
             40:j=8;41:j=8;42:j=8;43:j=0;
             44:j=10;45:j=10;46:j=10;47:j=10;
             48:j=10;49:j=10;50:j=10;51:j=0;
             
             52:j=8;53:j=0;54:j=8;55:j=8;
             56:j=8;57:j=0;58:j=10;59:j=10;
             60:j=10;61:j=10;62:j=10;63:j=10;
             64:j=0;65:j=0;66:j=0;67:j=0;
             
             68:j=13;69:j=13;70:j=13;71:j=0;
             72:j=13;73:j=13;74:j=13;75:j=0;
             76:j=13;77:j=13;78:j=12;79:j=12;
             80:j=13;81:j=13;82:j=13;83:j=0;
             
             84:j=12;85:j=12;86:j=8;87:j=8;
             88:j=8;89:j=0;90:j=10;91:j=10;
             92:j=10;93:j=10;94:j=10;95:j=10;
             96:j=0;97:j=0;98:j=0;99:j=0;
             
             100:j=15;101:j=15;102:j=13;103:j=0;
             104:j=13;105:j=13;106:j=12;107:j=12;
             108:j=13;109:j=13;110:j=13;111:j=13;
             112:j=13;113:j=13;114:j=13;115:j=13;
             
             116:j=12;117:j=12;118:j=8;119:j=8;
             120:j=8;121:j=8;122:j=9;123:j=9;
             124:j=9;125:j=9;126:j=9;127:j=9;
             128:j=0;129:j=0;130:j=0;131:j=0;
             
             132:j=14;133:j=14;134:j=14;135:j=14;
             136:j=14;137:j=14;138:j=14;139:j=14;
             140:j=14;141:j=14;142:j=12;143:j=12;
             144:j=10;145:j=10;146:j=10;147:j=10;
             
             148:j=12;149:j=12;150:j=12;151:j=12;
             152:j=12;153:j=12;154:j=12;155:j=12;
             156:j=12;157:j=12;158:j=12;159:j=12;
             160:j=12;161:j=12;162:j=12;163:j=12;
             
             164:j=15;165:j=15;166:j=0;167:j=0;
             168:j=13;169:j=13;170:j=0;171:j=13;
             172:j=12;173:j=12;174:j=0;175:j=12;
             176:j=13;177:j=13;178:j=0;179:j=13;  
             
             180:j=0;181:j=0;182:j=12;183:j=12;
             184:j=12;185:j=1;186:j=8;187:j=8;
             188:j=10;189:j=10;190:j=10;191:j=10;
             192:j=0;193:j=0;194:j=0;195:j=0;

             196:j=15;197:j=15;198:j=0;199:j=0;
             200:j=13;201:j=13;202:j=0;203:j=13;
             204:j=12;205:j=12;206:j=0;207:j=12;
             208:j=13;209:j=13;210:j=0;211:j=13;              

             212:j=0;213:j=0;214:j=12;215:j=12;
             216:j=12;217:j=1;218:j=8;219:j=8;
             220:j=9;221:j=9;222:j=9;223:j=9;
             224:j=0;225:j=0;226:j=0;227:j=0;   
             
             228:j=10;229:j=10;230:j=10;231:j=10;
             232:j=10;233:j=10;234:j=10;235:j=10;
             236:j=10;237:j=10;238:j=8;239:j=8;
             240:j=6;241:j=6;242:j=6;243:j=6;
             
             244:j=8;245:j=8;246:j=8;247:j=8;
             248:j=8;249:j=8;250:j=8;251:j=8;
             252:j=8;253:j=8;254:j=8;255:j=8;
             256:j=8;257:j=8;258:j=8;259:j=0;  
             
             260:j=10;261:j=10;262:j=12;263:j=12;
             264:j=12;265:j=12;266:j=13;267:j=13;
             268:j=13;269:j=13;270:j=13;271:j=13;
             272:j=13;273:j=13;274:j=13;275:j=13;
             
             276:j=10;277:j=10;278:j=12;279:j=12;
             280:j=12;281:j=12;282:j=13;283:j=13;
             284:j=13;285:j=13;286:j=13;287:j=13;
             288:j=13;289:j=13;290:j=13;291:j=13;
             
             292:j=15;293:j=15;294:j=15;295:j=15;
             296:j=15;297:j=15;298:j=15;299:j=15;
             300:j=0;301:j=0;302:j=14;303:j=14;
             304:j=12;305:j=12;306:j=12;307:j=12;
             
             308:j=13;309:j=13;310:j=13;311:j=13;
             312:j=13;313:j=13;314:j=13;315:j=13;
             316:j=13;317:j=13;318:j=13;319:j=13;
             320:j=13;321:j=13;322:j=13;323:j=13;
             
             324:j=0;325:j=0;326:j=0;327:j=0;
             328:j=0;329:j=0;330:j=0;331:j=0;
             332:j=0;333:j=0;334:j=0;335:j=0;
             336:j=0;337:j=0;338:j=0;339:j=0;
             
                                            
            endcase
        end                   
    end

endmodule

